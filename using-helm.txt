Using Helm
Introduction
Helm  is the package manager for Kubernetes. Helm is the best way to find, share, and use software built for Kubernetes. Helm and Kubernetes work like a client/server application. The Helm client pushes resources to the Kubernetes cluster via kubernetes API.

Helm

Helm Architecture

Helm charts are Helm packages that consists of YAML template files organized into a specific directory structure. Charts are easy to create, version, share, and publish and are reusable by anyone for any environment, which reduces complexity and duplicates. Following is the file structure for a typical Helm chart:

example-chart/
├── Chart.yaml
├── templates
│   ├── deployment.yaml
│   ├── rbac.yaml
│   └── service.yaml
└── values.yaml
The three basic concepts  of Helm charts are:

Chart is a Helm package and contains all of the resource definitions necessary to run an application, tool, or service inside of a Kubernetes cluster.

Release is an instance of a chart running in a Kubernetes cluster.

Repository is the place where charts can be collected and shared for Kubernetes packages.

Installation and Setup
Install Helm CLI

1
curl -sSL https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

Helm is installed by default in this workshop and you should expect to see the current version.

Output

Helm v3.14.0 is already latest
To list all charts. You may see no chart but this step is just to confirm if helm command is working.

1
helm list

Output

NAME    NAMESPACE       REVISION        UPDATED STATUS  CHART   APP VERSION
